message Datum {
  optional int32 channels   = 1;
  optional int32 height     = 2;
  optional int32 width      = 3;
  optional bytes data       = 4; // The actual image data, in bytes.
  optional int32 label      = 5;
  repeated float float_data = 6; // Optionally, the datum could also hold float data.
}

message FillerParameter {
  optional string type      = 1 [default = 'constant'];
  optional float  value     = 2 [default = 0]; // The value in constant filler
  optional float  min       = 3 [default = 0]; // The min in uniform filler
  optional float  max       = 4 [default = 1]; // The max in uniform filler
  optional float  mean      = 5 [default = 0]; // The mean in gaussian filler
  optional float  std       = 6 [default = 1]; // The std in gaussian filler
}

message LayerParameter {
  optional string name = 1; // The layer name
  optional string type = 2; // The string to specify the layer type

  // Parameters to specify layers with inner products.
  optional uint32          num_output    = 3;                  // The number of outputs for the layer
  optional bool            bias_term     = 4 [default = true]; // Whether to have bias terms
  optional FillerParameter weight_filler = 5;                  // The filler for the weight
  optional FillerParameter bias_filler   = 6;                  // The filler for the bias

  optional uint32 pad         = 7  [default = 0]; // The padding size
  optional uint32 kernel_size = 8;                // The kernel size
  optional uint32 group       = 9  [default = 1]; // The group size for group conv
  optional uint32 stride      = 10 [default = 1]; // The stride

  enum PoolMethod {
    MAX = 0;
    AVE = 1;
  }

  optional PoolMethod pool          = 11 [default = MAX];  // The pooling method
  optional float      dropout_ratio = 12 [default = 0.5];  // The dropout ratio
  optional uint32     local_size    = 13 [default = 5];    // For local response norm
  optional float      alpha         = 14 [default = 1.];   // For local response norm
  optional float      beta          = 15 [default = 0.75]; // For local response norm

  // For data layers, specify the data source.
  optional string source = 16;
  // For data pre-processing, we can do simple scaling and constant subtraction.
  optional float scale       = 17 [default = 1];
  optional float subtraction = 18 [default = 0];
  // For data layers, specify the batch size.
  optional uint32 batch_size = 19;
  // For data layers, specify if we would like to randomly crop an image.
  optional uint32 crop_size  = 20 [default = 0];

  // The blobs containing the numeric parameters of the layer.
  repeated BlobProto blobs   = 50;
}

message LayerConnection {
  optional LayerParameter layer  = 1; // The layer parameter
  repeated string         bottom = 2; // The name of the bottom blobs
  repeated string         top    = 3; // The name of the top blobs
}

message NetParameter {
  optional string          name   = 1; // Consider giving the network a name
  repeated LayerConnection layers = 2; // A bunch of layers
  repeated string          input  = 3; // The input to the network
}

message SolverParameter {
  optional float base_lr          = 1;                  // The base learning rate
  optional int32 display          = 2;                  // The display options. 0 = no display
  optional int32 max_iter         = 3;                  // The maximum number of iterations
  optional int32 snapshot         = 4 [default = 0];    // The snapshot interval
  optional string lr_policy       = 5;                  // The learning rate decay policy
  optional float min_lr           = 6 [default = 0];    // The minimum learning rate
  optional float max_lr           = 7 [default = 1e10]; // The maximum learning rate
  optional float gamma            = 8;                  // The parameter to compute the learning rate
  optional float power            = 9;                  // The parameter to compute the learning rate
  optional float momentum         = 10;                 // The momentum value
  optional float weight_decay     = 11;                 // The weight decay
  optional string snapshot_prefix = 12;                 // The prefix for the snapshot
}